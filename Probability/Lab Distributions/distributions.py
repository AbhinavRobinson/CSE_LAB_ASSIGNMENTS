# -*- coding: utf-8 -*-
"""Distributions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1427qSbt-Z_hvou_mJW0ECGaQ9jbjsNp9

#Probability Lab 6
## Abhinav Robinson // E18CSE006
###About 
Various types of distributions
"""

import numpy as np

SAMPLE_SIZE = 100000

# X ~ N(0,1)
mu, sigma = 0, 1
X = np.random.normal(mu, sigma, SAMPLE_SIZE)

a = 3
b = 5

# aX+b ~ N(b,a2)
newX  = [(a*num)+b for num in X]

print(f"Expected mu : {b}")
print(f"Calculated mu : {np.mean(newX)}")
print(f"Expected sigma : {a}")
print(f"Calulated sigma : {np.std(newX)}")

import numpy as np
import math

SAMPLE_SIZE = 100000
a = 3
b = 5

# X ~ N(a, b2)
mu, sigma = a, b**2
X = np.random.normal(mu, sigma, SAMPLE_SIZE)

## (X-a)/b ~N(0,1).
newX  = [((num - a)/b) for num in X]

print(f"Expected mu : {0}")
print(f"Calculated mu : {np.mean(newX)}")
print(f"Expected sigma : {math.floor(np.std(newX))}")
print(f"Calulated sigma : {np.std(newX)}")

import matplotlib.pyplot as plt
import numpy as np

SAMPLE_SIZE = 10000

# normal dist
mu, sigma = 3, 5**2
norm = np.random.normal(mu, sigma, SAMPLE_SIZE)
plt.hist(norm)
plt.show()

# poisson dist
norm = np.random.poisson(5, SAMPLE_SIZE)
count, bins, ignored = plt.hist(norm, 15, normed=True)
plt.show()

# Exp dist
exp = np.random.exponential(100, SAMPLE_SIZE)
plt.hist(exp)
plt.show()